# -*- mode: python; -*-

name = 'pixelperfect'

def CreateProperlyNamedLibLink(name):
  return Link(
      'liblinks/%s.jar' % name,
      src='../../../out/target/common/obj/JAVA_LIBRARIES/'
          '%s_intermediates/javalib.jar' % name)

files = [
  Link('Android.mk'),
  Link('AndroidManifest.xml'),
  Link('proguard.tests.flags'),
  Link('res'),
  Link('src'),
  Link('scripts'),
  Link('eclipse'),
  LinkFramework('framework-core', 'frameworks/base/core/java'),
  LinkFramework('framework-java', 'libcore/luni/src/main/java'),
  CreateProperlyNamedLibLink('guava'),
  CreateProperlyNamedLibLink('android-support-v13'),
  Link('libsrcs/guava', src='../../../external/guava/guava/src/'),
  Link('libsrcs/android-support-v13', src='../../../frameworks/support/v13/java'),
  Create('project.properties', contents='target=android-19\n'),
  Mkdir('.settings'),
  Create('.settings/com.google.eclipse.protobuf.Protobuf.prefs',
    'eclipse.preferences.version=1\n'
    'paths.directoryPaths=${workspace_loc\:/${project}/imported_protos/src},${workspace_loc\:/${project}/src}\n'
    'paths.filesInMultipleDirectories=true\n'
    'paths.filesInOneDirectoryOnly=false\n'),
  Mkdir('gen'),
]

classpath = [
  Src('src'),
  Src('gen'),
  AndroidFrameworkSrc('framework-core'),
  AndroidFrameworkSrc('framework-java'),
  Lib('liblinks/guava.jar', sourcepath='libsrcs/guava'),
  Lib('liblinks/android-support-v13.jar', sourcepath='libsrcs/android-support-v13'),
  AndroidFramework(),
  Output('bin'),
]

project = AndroidProject(
  name=name,
  builders=[
    AndroidResourceManager(),
    AndroidPreCompiler(),
    JavaBuilder(),
    AndroidApkBuilder(),
  ]
)

formatting = 'eclipse/formatting.prefs'
templates = 'eclipse/template.prefs'
