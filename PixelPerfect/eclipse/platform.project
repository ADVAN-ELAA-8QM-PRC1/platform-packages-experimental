# -*- mode: python; -*-

name = 'platform'

def CreateProperlyNamedLibLink(name):
  return Link(
      'liblinks/%s.jar' % name,
      src='../../../out/target/common/obj/JAVA_LIBRARIES/'
          '%s_intermediates/javalib.jar' % name)

files = [
  Link('Android.mk', src='platform/Android.mk'),
  Link('AndroidManifest.xml', src='platform/AndroidManifest.xml'),
  Link('proguard.tests.flags', src='platform/proguard.tests.flags'),
  Link('src', src='platform/src'),
  CreateProperlyNamedLibLink('libpixelperfect-protos'),
  CreateProperlyNamedLibLink('guava'),
  Link('libsrcs/libpixelperfect-protos', src='../../../out/target/common/obj/JAVA_LIBRARIES/libpixelperfect-protos_intermediates/src/proto/src/'),
  Link('libsrcs/guava', src='../../../external/guava/guava/src/'),
  Create('default.properties', contents='target=android-19\n'),
  Mkdir('gen'),
  Link('res', src='res'),  # TODO(dprothro): use separate res if needed
]

classpath = [
  Src('src'),
  Src('gen'),
  AndroidFrameworkSrc('framework-core'),
  AndroidFrameworkSrc('framework-java'),
  Lib('liblinks/libpixelperfect-protos.jar', sourcepath='libsrcs/libpixelperfect-protos'),
  Lib('liblinks/guava.jar', sourcepath='libsrcs/guava'),
  AndroidFramework(),
  Output('bin'),
]

project = AndroidProject(
  name=name,
  builders=[
    AndroidResourceManager(),
    AndroidPreCompiler(),
    JavaBuilder(),
    AndroidApkBuilder(),
  ]
)

formatting = 'eclipse/formatting.prefs'
templates = 'eclipse/template.prefs'
